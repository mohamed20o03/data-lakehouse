services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 5s
      timeout: 3s
      retries: 3

  minio-setup:
    image: minio/mc:latest
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 admin password123;
      mc mb myminio/uploads --ignore-existing;
      mc mb myminio/warehouse --ignore-existing;
      exit 0;
      "

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: password123
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 10s
      timeout: 10s
      retries: 3

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data

  api-service:
    build: ./api-service
    container_name: api-service
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_healthy
      redis:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_USER: iceberg_user
      POSTGRES_PASSWORD: iceberg_pass
      POSTGRES_DB: iceberg_catalog
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data

  spark-worker:
    build:
      context: ./spark
      dockerfile: worker-app/Dockerfile
    container_name: spark-worker
    depends_on:
      - minio
      - postgres
      - rabbitmq
    environment:
      - MINIO_ENDPOINT=http://minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password123
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=password123
      - RABBITMQ_QUEUE=file.processing.queue
      - MINIO_UPLOADS_BUCKET=uploads

volumes:
  minio_data:
  rabbitmq_data:
  redis_data:
  pg_data:
